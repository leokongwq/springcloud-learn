###########################################################
# 			Application configuration
# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
###########################################################

###########################################################
# system configuration
version=0.0.1
server.port=2223
spring.application.name=bookservice
###########################################################

# 数据源配置
spring.druid.url = jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8
spring.druid.username = root
spring.druid.password = 1q2w3e4r
spring.druid.driverClassName = com.mysql.jdbc.Driver
spring.druid.initialSize=5
spring.druid.minIdle=5
spring.druid.maxActive=20
spring.druid.maxWait=1000
spring.druid.timeBetweenEvictionRunsMillis=60000
spring.druid.minEvictableIdleTimeMillis=300000
spring.druid.validationQuery=SELECT 1 FROM DUAL
spring.druid.testWhileIdle=true
spring.druid.testOnBorrow=false
spring.druid.testOnReturn=false
spring.druid.poolPreparedStatements=true
spring.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.druid.filters=stat,wall,log4j
spring.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


# 多数据源配置
spring.datasource.primary.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.primary.url=jdbc:mysql://127.0.0.1:3306/test
spring.datasource.primary.username=root
spring.datasource.primary.password=1q2w3e4r
spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver


spring.datasource.secondary.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.secondary.url=jdbc:mysql://127.0.0.1:3306/test
spring.datasource.secondary.username=root
spring.datasource.secondary.password=1q2w3e4r
spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver


# druid-spring-boot-starter
# https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
spring.datasource.druid.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.druid.username=root
spring.datasource.druid.password=1q2w3e4r
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver

# druid连接池监控
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
# 排除一些静态资源，以提高效率
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*



# 注册中心配置
eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/

#连接mongo
#spring.data.mongodb.uri=mongodb://127.0.0.1:27017/test

##============== kafka ===================
## 指定kafka 代理地址，可以多个
#spring.kafka.bootstrap-servers=127.0.0.1:9092
#
##=============== provider  =======================
#spring.kafka.producer.retries=0
## 每次批量发送消息的数量
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.buffer-memory=33554432
#
## 指定消息key和消息体的编解码方式
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#
##=============== consumer  =======================
## 指定默认消费者group id
#spring.kafka.consumer.group-id=test-consumer-group
#
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#
#spring.data.mongodb.uri=mongodb://127.0.0.1:27017/test

#默认就是true
#spring.cloud.consul.enabled=true
#spring.cloud.consul.host=127.0.0.1
#spring.cloud.consul.port=8500
##默认就是true
#spring.cloud.consul.discovery.enabled=true
##服务名
#spring.cloud.consul.discovery.serviceName=${spring.application.name}
##服务注册实例名
#spring.cloud.consul.discovery.instanceId=${spring.application.name}-${spring.cloud.client.ipAddress}-${server.port}
##服务所在的主机名
#spring.cloud.consul.discovery.hostname=${spring.cloud.client.ipAddress}
##服务所在的端口
#spring.cloud.consul.discovery.port=${server.port}
##服务的健康检查url
#spring.cloud.consul.discovery.healthCheckUrl=http://localhost:${server.port}/
#spring.cloud.consul.discovery.healthCheckInterval=10s
#spring.cloud.consul.discovery.healthCheckTimeout=10s
#spring.cloud.consul.discovery.healthCheckPath=/
#spring.cloud.consul.discovery.tags=dev,dev1
